FROM golang:1.13.4-alpine AS golang-builder

WORKDIR /app

RUN apk update &&  apk add --update make curl

# Copy Makefile first, it will save time during development.
COPY agent/Makefile ./Makefile

# Install deps
RUN make setup

# Copy all project files
ADD . .

#Generate a binary
RUN make -C /app/agent build

FROM alpine:3.9

ARG K8S_VERSION=v1.12.9
ARG HELM_VERSION=v2.13.0

ENV HELM_FILENAME=helm-${HELM_VERSION}-linux-amd64.tar.gz

WORKDIR /

# System
RUN apk update && apk add --no-cache --virtual .build-deps \
    sudo \
    openssh \
    ca-certificates \
    curl \
    tar \
    bash \
    openssl \
    python \
    git


#Install Helm + kubectl
RUN apk add --update ca-certificates \
 && apk add --update -t deps curl  \
 && apk add --update gettext tar gzip \
 && apk add --update gnupg \
 && curl -L https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl \
 && curl -L https://storage.googleapis.com/kubernetes-helm/${HELM_FILENAME} | tar xz && mv linux-amd64/helm /bin/helm && rm -rf linux-amd64 \
 && chmod +x /usr/local/bin/kubectl \
 && apk del --purge deps \
 && rm /var/cache/apk/*


RUN addgroup -S appgroup && adduser -S appuser -G appgroup
RUN  echo "user ALL=(root) NOPASSWD:ALL" > /etc/sudoers.d/appuser && \
        chmod 0440 /etc/sudoers.d/appuser

USER appuser


#Install gcloud sdk
RUN curl -sSL https://sdk.cloud.google.com | bash
RUN $HOME/google-cloud-sdk/bin/gcloud components install beta

COPY --chown=appuser:appgroup  ./agent/startup.sh /home/appuser/
COPY --chown=appuser:appgroup --from=golang-builder /app/agent/platformInstaller /home/appuser
COPY --chown=appuser:appgroup --from=golang-builder /app/agent/resources /home/appuser/agent/resources/
COPY --chown=appuser:appgroup --from=golang-builder /app/common/resources /home/appuser/common/resources/

RUN chmod 777 $HOME/startup.sh

USER root
RUN ln -sf /home/appuser/google-cloud-sdk/bin/gcloud /usr/bin/gcloud

USER appuser
ENTRYPOINT /home/appuser/startup.sh